{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Ranking/Ranking.js","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/ImageRecognition/ImageInfo/ImageInfo.js","components/ImageRecognition/ImageRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","components/ImageRecognition/ImageInfo/DefaultInfo.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","rankingTable","Array","apply","length","map","user","i","react_default","a","createElement","key","Modal","setAppElement","document","getElementById","Ranking","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openModal","fetch","then","resp","json","users","setState","ranking","loadingRanking","modalIsOpen","closeModal","state","_this2","_this$state","name","entries","email","replace","slice","indexOf","className","onClick","lib_default","isOpen","onRequestClose","contentLabel","ref","subtitle","React","Component","Navigation","_ref","onRouteChange","isSignedIn","Navigation_Ranking_Ranking","Logo","tilt_default","options","max","style","height","width","src","brain","alt","paddingTop","ImageLinkForm","_this$props","props","onInputChange","onDetectSubmit","handleRandomLink","value","imageLoading","href","target","rel","type","placeholder","onChange","Rank","handleShow","show","concat","ImageInfo","imageInfo","detected","round","parseFloat","toFixed","ImageRecognition","handleImageLoaded","loading","imageUrl","onLoad","ImageRecognition_ImageInfo_ImageInfo","SignIn","onEmailChange","event","signInEmail","onPasswordChange","signInPassword","onSubmitSignIn","method","headers","Content-Type","body","JSON","stringify","password","id","loadUser","htmlFor","Register","handleUserInput","e","defineProperty","validateField","fieldName","emailValid","passwordValid","match","validateForm","formValid","onSubmitRegister","nameInputHelp","emailInputHelp","passwordInputHelp","onFocus","onBlur","disabled","initialState","input","app_id","dataFetching","route","joined","App","data","console","log","includes","url","response","concepts","count","assign","catch","image","err","windowWidth","window","innerWidth","particles_default","params","ParticlesParams","components_Navigation_Navigation","react","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_ImageRecognition_ImageRecognition","components_SignIn_SignIn","components_Register_Register","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4ffd625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.79bb4da8.png\";","import React from 'react'\r\nimport Modal from 'react-modal';\r\nimport './Ranking.css';\r\n\r\nlet rankingTable =Array.apply(null, { length: 10 }).map((user, i) => {\r\n    return (\r\n    <tr key={i+1}>\r\n      <td>{i+1}</td>\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n</tr>)});\r\nModal.setAppElement(document.getElementById('root'));\r\n\r\nclass Ranking extends React.Component {\r\n    constructor() {\r\n        super();\r\n     \r\n        this.state = {\r\n          modalIsOpen: false,\r\n          ranking: [],\r\n          loadingRanking:true\r\n        };\r\n      }\r\n      openModal = () => {\r\n        fetch('https://fast-caverns-20871.herokuapp.com/ranking')\r\n        .then(resp => resp.json())\r\n        .then(users => this.setState({\r\n            ranking: users,\r\n            loadingRanking: false\r\n        }))\r\n      this.setState({modalIsOpen: true})\r\n    }\r\n      closeModal= () => {\r\n        this.setState({modalIsOpen: false});\r\n      }\r\n     \r\n      render() {\r\n          const {ranking, loadingRanking} = this.state;\r\n            ranking.map((user, i) => {\r\n           rankingTable[i] = \r\n           <tr key={i+1}>\r\n           <td>{i+1}</td>\r\n           <td>{user.name}</td>\r\n           <td>{user.entries}</td>\r\n           <td>{user.email.replace(user.email.slice(1,user.email.indexOf('@')-2), '*****')}</td>\r\n            </tr>\r\n            })\r\n        return (\r\n          <div>\r\n            <p className='f4 link dim dark-gray pa3 pointer' onClick={this.openModal}>Ranking</p>\r\n\r\n            <Modal\r\n              isOpen={this.state.modalIsOpen}\r\n              onRequestClose={this.closeModal}\r\n              className\r\n              contentLabel=\"Ranking\"\r\n            >\r\n              <h2 className='ranking-header' ref={subtitle => this.subtitle = subtitle}></h2>\r\n              <button className='absolute right-0 top-0 bn pa1 bg-washed-blue hover-light-red' onClick={this.closeModal}>close</button>\r\n\r\n              <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Rank</th>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                {loadingRanking? \r\n              <div >Loading...</div>\r\n              :\r\n                <tbody >\r\n                {rankingTable}\r\n                </tbody>\r\n                }\r\n                </table>    \r\n            </Modal>\r\n          </div>\r\n\r\n        );\r\n      }\r\n    }\r\n\r\nexport default Ranking;","import React from 'react';\r\nimport Ranking from './Ranking/Ranking';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if(isSignedIn){\r\n        return (\r\n        <nav className='navigation' >\r\n            <Ranking />\r\n            <p onClick={() => onRouteChange('signout')} className='f4 link dim light-gray  pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n        )   \r\n    } else {\r\n    return (\r\n        <nav className='navigation'>\r\n            <p onClick={() => onRouteChange('signin')} className='f4 link dim light-gray pa3 pointer'>Sign In</p>\r\n            <p onClick={() => onRouteChange('register')} className='f4 link dim light-gray pa3 pointer'>Register</p>\r\n            <p onClick={() => onRouteChange('home')} className='f4 link light-gray hover-purple pa3 pointer'>Login as Anonymous</p>\r\n        </nav>\r\n    )}\r\n}\r\nexport default Navigation;\r\n","import React from 'react'\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css';\r\nimport brain from './brain.png';\r\n\r\nconst Logo = () => {\r\n        return (\r\n            <div className='ma4 mt0 '>\r\n                <Tilt className=\"Tilt br2 shadow-1\" options={{ max : 55 }} style={{ height: 200, width: 200 }} >\r\n                    <div className=\"Tilt-inner pa3\">Image Recognition App <img src={brain} alt='logo' style={{paddingTop:'5px'}} /></div>\r\n                </Tilt>\r\n            </div>\r\n        )\r\n    }\r\n    export default Logo;","import React, { Component } from 'react'\r\nimport './ImageLinkForm.css';\r\n\r\nclass ImageLinkForm extends Component {\r\n  render() {\r\n      const {onInputChange, onDetectSubmit, handleRandomLink, value, imageLoading} = this.props;\r\n    return (\r\n        <div className=''>\r\n                <div className='center imageForm pa4 shadow-5 ba b--black-05 lh-title '>\r\n                <p className='w-95 tc '>\r\n                {\"Enter your url with the photo and let the Artificial Intelligence recognize what it is.\\n If you don't have any image you can find some at\" }                \r\n                <a className='link dim gold bg-animate' href='https://unsplash.com' target='_blank' rel=\"noopener noreferrer\"> unsplash.com</a> or generate \r\n                <span className='link dim gold bg-animate relative pointer' onClick = {handleRandomLink} > random link.\r\n                {!imageLoading? '' :  <span className=\"loaderSmall\"></span>}\r\n                </span>\r\n                </p>\r\n                <input className='f4 pv2 w-70 center' type='url' placeholder='https://' value={value} onChange={onInputChange}/>\r\n                <button className='w-30 grow f4 link pv2 dib white bg-blue'\r\n                onClick={onDetectSubmit}\r\n                >Detect</button>\r\n                </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nclass Rank extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state ={ show: true}\r\n    }\r\n\r\n    handleShow = () => {\r\n        this.setState({\r\n            show:false\r\n        })\r\n    }\r\n    render() {\r\n    const {name, entries} = this.props;\r\n\r\n    return (\r\n    <div>\r\n        <div className='near-black f3 pb2 tracked'>\r\n            {name==='Anonymous'?\r\n            <span onClick={this.handleShow} className={this.state.show?'f5 light-gray':'dn'}>{`Hi, if you would like to have your place in score table and collect points, please register :)`} <h6 className='f7 pa1 ma0 white'>click to hide</h6></span>\r\n            :`${name}, your current score is:`}\r\n        </div>\r\n        <div className='white f1 '>\r\n            {name==='Anonymous'?null:entries}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageInfo.css';\r\n\r\nconst ImageInfo = ({imageInfo}) => {\r\n    return (\r\n        <ul className='info'>\r\n            \r\n            {imageInfo.map((detected,i) => { \r\n                const round = parseFloat(detected.value*100).toFixed(2);\r\n                return (\r\n                <li key={i} className='detected-paragraph'>\r\n                    <span className='detectedName'>{`${detected.name}`}</span>\r\n                    <span className='detectedValue'>{` ${round}%`}</span>\r\n                </li>)\r\n                })\r\n            }\r\n           \r\n        </ul>\r\n    )\r\n}\r\nexport default ImageInfo;","import React, { Component } from 'react'\r\nimport './ImageRecognition.css';\r\nimport ImageInfo from './ImageInfo/ImageInfo';\r\n\r\n\r\nclass ImageRecognition extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        };\r\n    }\r\n    handleImageLoaded = () => {\r\n        this.setState({loading: false});\r\n    }\r\n    componentWillMount() {\r\n        this.setState({loading: true});\r\n    }\r\n  render() {\r\n    const {imageUrl, imageInfo} = this.props;\r\n    return (\r\n        <div className='flex justify-center'>\r\n            <div className='imageContainer relative'>\r\n            <img className={this.state.loading ? \"currentImage\" : \"currentImage visible\"} \r\n            onLoad={this.handleImageLoaded} src={imageUrl} alt=''/>\r\n                {this.state.loading ? \r\n                null \r\n                : <ImageInfo imageInfo={imageInfo} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )}\r\n    \r\n  }\r\n\r\nexport default ImageRecognition;","import React from 'react'\r\n\r\nclass SignIn extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value});\r\n\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n    onSubmitSignIn = () => {\r\n        fetch('https://fast-caverns-20871.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password:this.state.signInPassword\r\n            })\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(user => {\r\n            if(user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <main className=\"pa4 mb4 b--black-20 br3 ba w-90-m shadow-5 mw6 center w-90 w-30-l\">\r\n            <div className=\"measure center\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw4 ph0 mh0 normal\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={this.onSubmitSignIn}  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\r\n                </div>\r\n                <div className=\" tc lh-copy mt3 pointer\">\r\n                    <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db\">Register</p>\r\n                </div>\r\n                <div className=\"tr\">\r\n                <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black grow pointer f6 dib bg-light-purple\" type=\"submit\" value=\"Anonymous login\" />\r\n                </div>\r\n            </div>\r\n        </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react'\r\nimport './Register.css';\r\n\r\nclass Register extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            emailValid: false,\r\n            passwordValid: false,\r\n            formValid: false,\r\n            nameInputHelp: false,\r\n            emailInputHelp: false,\r\n            passwordInputHelp: false\r\n        }\r\n    }\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({[name]: value},\r\n            () => { this.validateField(name, value) });\r\n    }\r\n    validateField = (fieldName, value) => {\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n      \r\n        switch(fieldName) {\r\n          case 'email':\r\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n            break;\r\n          case 'password':\r\n            passwordValid = value.length >= 6;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        this.setState({\r\n                        emailValid: emailValid,\r\n                        passwordValid: passwordValid\r\n                      }, this.validateForm);\r\n      }\r\n      \r\n      validateForm = () => {\r\n        this.setState({formValid: this.state.emailValid && this.state.passwordValid && this.state.name});\r\n      }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch('https://fast-caverns-20871.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name,\r\n\r\n            })\r\n        })\r\n        .then(resp => resp.json())\r\n        .then(user => {\r\n            if(user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    } \r\n    \r\n    render() {\r\n    return (\r\n        <main className=\"pa4 mb4 b--black-20 br3 ba shadow-5 mw6 center w-90 w-30-l\">\r\n            <div className=\"measure center\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw4 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3 relative \">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>   \r\n                        <input \r\n                        onChange={this.handleUserInput}\r\n                        onFocus={() => {this.setState({nameInputHelp:true})} } \r\n                        onBlur={() => {this.setState({nameInputHelp:false})} } \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\r\n                        {this.state.nameInputHelp? <div className='email-help f6'> Please enter your name</div>: null} \r\n                    </div>\r\n                    <div className=\"mt3 relative\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input \r\n                        onChange= {this.handleUserInput}\r\n                        onFocus={() => {this.setState({emailInputHelp:true})} } \r\n                        onBlur={() => {this.setState({emailInputHelp:false})} } \r\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email\"  id=\"email-address\" />\r\n                        {this.state.emailInputHelp? <div className='email-help f6'> Please enter your address email</div>: null} \r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input \r\n                        onChange= {this.handleUserInput} \r\n                        onFocus={() => {this.setState({passwordInputHelp:true})} } \r\n                        onBlur={() => {this.setState({passwordInputHelp:false})} }   \r\n                        className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                        {this.state.passwordInputHelp? <div className='email-help f6'> Please enter your password (min: 6 characters)</div>: null} \r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={this.onSubmitRegister} disabled={!this.state.formValid} className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib' type=\"submit\" value=\"Register\" />\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n}\r\n\r\nexport default Register;","import React, { Component, Fragment} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ImageRecognition from './components/ImageRecognition/ImageRecognition';\nimport Particles from 'react-particles-js';\nimport ParticlesParams from './particlesjs-config.json';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport defaultInfo from './components/ImageRecognition/ImageInfo/DefaultInfo';\n\n\nconst initialState = {\n  input: '',\n  imageUrl: 'https://images.unsplash.com/photo-1540206458-a985485e4a8e?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=e2e651dc8e83c46450aaf39a4dd59066&auto=format&fit=crop&w=2090&q=80',\n  imageInfo: defaultInfo,\n  imageLoading: false,\n  dataFetching: false,\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id:'',\n    name:'',\n    email:'',\n    entries:0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState\n    }\n\n    componentDidMount() {\n      fetch('https://fast-caverns-20871.herokuapp.com/')\n      .then(resp => resp.json())\n      .then(console.log)\n    }\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  onInputChange = (e) => {\n    console.log(e.target.value);\n      this.setState({input:e.target.value})\n  }\n\n  onDetectSubmit = () => {\n    this.setState({dataFetching: true});\n    if(this.state.input.includes('http')){\n    this.setState({imageUrl:this.state.input});\n\n    fetch('https://fast-caverns-20871.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n          url: this.state.input\n      })\n    })\n    .then(resp => resp.json())\n      .then(response => {\n        var concepts = response['outputs'][0]['data']['concepts'];\n        this.setState({imageInfo: concepts, input: '', dataFetching: false});\n        if(this.state.user.name) {\n        fetch('https://fast-caverns-20871.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n        })\n        .then(resp => resp.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count})\n          )\n        })\n        .catch(console.log)\n      }})\n    } else {\n      this.setState({input:'Enter a valid address', dataFetching: false});\n    }\n  }\n\n  handleRandomLink = () => {\n    this.setState({imageLoading: true});\n    fetch('https://source.unsplash.com/random')\n    .then(image => this.setState({input: image.url + '.jpg', imageLoading: false}))\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signout'){\n      this.setState(initialState)\n    }else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n  \n  render() {\n    const windowWidth = window.innerWidth;\n    const {isSignedIn,imageUrl,imageInfo,imageLoading, input,route, dataFetching} = this.state;\n    return (\n      <div className=\"App\">\n        {windowWidth>800? \n        <Particles className='particles' params={ParticlesParams}/> \n        : null}\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'?\n        <Fragment>\n          <Logo />\n          <Rank \n          name={this.state.user.name || 'Anonymous'}\n          entries={this.state.user.entries}\n             />\n          <ImageLinkForm \n          imageLoading={imageLoading}\n          onInputChange={this.onInputChange}\n          handleRandomLink={this.handleRandomLink} \n          onDetectSubmit={this.onDetectSubmit} \n          value={input}\n          />\n          {dataFetching?\n            <div className=\"loaderBig\">\n            </div> \n            :\n          <ImageRecognition \n          dataFetching={dataFetching}\n          imageUrl={imageUrl} \n          imageInfo={imageInfo} />\n          }\n        </Fragment>\n        :\n        (\n          route === 'signin' ?\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          :\n          <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        )\n        \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const defaultInfo = [\r\n    {id: \"ai_BlL0wSQh\", name: \"water\", value: 0.9962818, app_id: \"main\"},\r\n    {id: \"ai_7bRKqWjp\", name: \"sea\", value: 0.99576914, app_id: \"main\"},\r\n    {id: \"ai_xZgtf58b\", name: \"ocean\", value: 0.9903431, app_id: \"main\"},\r\n    {id: \"ai_VRmbGVWh\", name: \"travel\", value: 0.98410416, app_id: \"main\"},\r\n    {id: \"ai_786Zr311\", name: \"no person\", value: 0.9831534, app_id: \"main\"},\r\n    {id: \"ai_jWFxtpH1\", name: \"seashore\", value: 0.98313934, app_id: \"main\"},\r\n    {id: \"ai_J1hw9SFJ\", name: \"beach\", value: 0.9816502, app_id: \"main\"},\r\n    {id: \"ai_jlzP4C8j\", name: \"island\", value: 0.9743533, app_id: \"main\"},\r\n    {id: \"ai_MTvKbKJv\", name: \"landscape\", value: 0.9673852, app_id: \"main\"},\r\n    {id: \"ai_tBcWlsCp\", name: \"nature\", value: 0.9517455, app_id: \"main\"},\r\n    {id: \"ai_V0zg5ppH\", name: \"seascape\", value: 0.93681777, app_id: \"main\"},\r\n    {id: \"ai_lNsKfmXb\", name: \"sky\", value: 0.93339205, app_id: \"main\"},\r\n    {id: \"ai_PchWZPFC\", name: \"boat\", value: 0.90155095, app_id: \"main\"},\r\n    {id: \"ai_1W3Gfjzg\", name: \"vacation\", value: 0.8997644, app_id: \"main\"},\r\n    {id: \"ai_FsT0Zqdb\", name: \"summer\", value: 0.8986201, app_id: \"main\"},\r\n    {id: \"ai_Zmhsv0Ch\", name: \"outdoors\", value: 0.8936979, app_id: \"main\"},\r\n    {id: \"ai_0rLMqXwG\", name: \"bay\", value: 0.8908093, app_id: \"main\"},\r\n    {id: \"ai_DSCFH6f6\", name: \"sand\", value: 0.882473, app_id: \"main\"},\r\n    {id: \"ai_r8x1BJcR\", name: \"surf\", value: 0.8784616, app_id: \"main\"},\r\n    {id: \"ai_vCbqNgZn\", name: \"turquoise\", value: 0.8681201, app_id: \"main\"}\r\n    ];\r\n\r\nexport default defaultInfo;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}