{"version":3,"sources":["components/Logo/brain.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/ImageRecognition/ImageInfo/ImageInfo.js","components/ImageRecognition/ImageRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","components/ImageRecognition/ImageInfo/DefaultInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Logo","tilt_default","options","max","height","width","src","brain","alt","paddingTop","ImageLinkForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputValue","_this$props","onInputChange","onButtonSubmit","handleRandomLink","value","imageLoading","href","target","rel","type","placeholder","onChange","Component","Rank","ImageInfo","imageInfo","map","detected","i","round","parseFloat","toFixed","key","concat","name","ImageRecognition","handleImageLoaded","setState","loading","imageUrl","onLoad","ImageRecognition_ImageInfo_ImageInfo","SignIn","id","htmlFor","Register","defaultInfo","app_id","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","e","console","log","input","dataFetching","includes","models","initModel","GENERAL_MODEL","version","then","generalModel","predict","response","concepts","fetch","image","url","catch","err","route","_this$state","particles_default","params","components_Navigation_Navigation","react","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_ImageRecognition_ImageRecognition","components_SignIn_SignIn","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8TCkBzBC,SAhBI,SAAAC,GAAiC,IAA/BC,EAA+BD,EAA/BC,cACjB,OADgDD,EAAhBE,WAG5BC,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,CAACC,QAAQ,OAAQC,eAAe,aACzCL,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,WAAWS,UAAU,2CAArD,aAKJP,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,CAACC,QAAQ,OAAQC,eAAe,aACzCL,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,WAAWS,UAAU,2CAArD,WACAP,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,aAAaS,UAAU,2CAAvD,YACAP,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,SAASS,UAAU,2CAAnD,mECAOC,EATN,WACL,OACIR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACXP,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAMM,UAAU,oBAAoBG,QAAS,CAAEC,IAAM,IAAMR,MAAO,CAAES,OAAQ,IAAKC,MAAO,MACpFb,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBAAf,yBAAsDP,EAAAC,EAAAC,cAAA,OAAKY,IAAKC,IAAOC,IAAI,OAAOb,MAAO,CAACc,WAAW,aC2B1GC,qBAhCX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,WAAY,IAHFR,wEAOX,IAAAS,EAC0EN,KAAKJ,MAA7EW,EADFD,EACEC,cAAeC,EADjBF,EACiBE,eAAgBC,EADjCH,EACiCG,iBAAkBC,EADnDJ,EACmDI,MAAOC,EAD1DL,EAC0DK,aACjE,OACQlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,2CACfP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,mBACZ,yHAA0HP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,2BAA2B4B,KAAK,uBAAuBC,OAAO,SAASC,IAAI,uBAAxF,iBAD3H,gBACuQrC,EAAAC,EAAAC,cAAA,KAAGK,UAAU,oCAAoCD,QAAW0B,GAA5D,gBACpP,IAAjBE,EAAwB,GAEtBlC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBAGnBP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qBAAqB+B,KAAK,MAAMC,YAAY,WAAWN,MAAOA,EAAOO,SAAUV,IAChG9B,EAAAC,EAAAC,cAAA,UAAQK,UAAU,uDAClBD,QAASyB,GADT,mBArBYU,cCYbC,EAbF,WACT,OACA1C,EAAAC,EAAAC,cAAA,aCgBWyC,eAjBG,SAAA9C,GAAiB,IAAf+C,EAAe/C,EAAf+C,UAChB,OAAGA,EAEC5C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACVqC,EAAUC,IAAI,SAACC,EAASC,GACrB,IAAMC,EAAQC,WAA0B,IAAfH,EAASb,OAAWiB,QAAQ,GACrD,OACAlD,EAAAC,EAAAC,cAAA,KAAGiD,IAAKJ,EAAGxC,UAAU,kBAAiBP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,gBAAhB,GAAA6C,OAAmCN,EAASO,OAAcrD,EAAAC,EAAAC,cAAA,QAAMK,UAAU,iBAAhB,IAAA6C,OAAqCJ,EAArC,UAKpGhD,EAAAC,EAAAC,cAAA,cCiBGoD,cA1BX,SAAAA,EAAYnC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACflC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,KAAMJ,KAKVoC,kBAAoB,WAChBnC,EAAKoC,SAAS,CAACC,SAAS,KALxBrC,EAAKO,MAAQ,CACT8B,SAAS,GAHErC,wEASZ,IAAAS,EACuBN,KAAKJ,MAA5BuC,EADA7B,EACA6B,SAAUd,EADVf,EACUe,UACjB,OACI5C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gCACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,sBACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAWgB,KAAKI,MAAM8B,QAAU,eAAiB,uBAAwBE,OAAQpC,KAAKgC,kBAAmBzC,IAAK4C,EAAU1C,IAAI,KAChIO,KAAKI,MAAM8B,QACZzD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAEbP,EAAAC,EAAAC,cAAC0D,EAAD,CAAWhB,UAAWA,aAnBLH,+CC0BhBoB,EA7BA,SAAAhE,GAAqB,IAAnBC,EAAmBD,EAAnBC,cACb,OACIE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,4DACZP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,kBACZP,EAAAC,EAAAC,cAAA,YAAU4D,GAAG,UAAUvD,UAAU,6BAC7BP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,kBAAlB,WACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoBwD,QAAQ,iBAA7C,SACA/D,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qEAAqE+B,KAAK,QAAQe,KAAK,gBAAiBS,GAAG,mBAEhI9D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoBwD,QAAQ,YAA7C,YACA/D,EAAAC,EAAAC,cAAA,SAAOK,UAAU,uEAAuE+B,KAAK,WAAWe,KAAK,WAAYS,GAAG,eAGpI9D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,IACfP,EAAAC,EAAAC,cAAA,SAAOI,QAAS,kBAAMR,EAAc,SAASS,UAAU,uEAAuE+B,KAAK,SAASL,MAAM,aAElJjC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,2BACXP,EAAAC,EAAAC,cAAA,KAAGI,QAAS,kBAAMR,EAAc,aAAaS,UAAU,wBAAvD,aAEJP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,MACfP,EAAAC,EAAAC,cAAA,SAAOI,QAAS,kBAAMR,EAAc,SAASS,UAAU,wEAAwE+B,KAAK,SAASL,MAAM,wBCKpJ+B,EA3BE,SAAAnE,GAAqB,IAAnBC,EAAmBD,EAAnBC,cACf,OACIE,EAAAC,EAAAC,cAAA,QAAMK,UAAU,4DACZP,EAAAC,EAAAC,cAAA,QAAMK,UAAU,kBACZP,EAAAC,EAAAC,cAAA,YAAU4D,GAAG,UAAUvD,UAAU,6BAC7BP,EAAAC,EAAAC,cAAA,UAAQK,UAAU,kBAAlB,YACAP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoBwD,QAAQ,QAA7C,QACA/D,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qEAAqE+B,KAAK,OAAOe,KAAK,OAAOS,GAAG,UAErH9D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoBwD,QAAQ,iBAA7C,SACA/D,EAAAC,EAAAC,cAAA,SAAOK,UAAU,qEAAqE+B,KAAK,QAAQe,KAAK,gBAAiBS,GAAG,mBAEhI9D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAAA,SAAOK,UAAU,oBAAoBwD,QAAQ,YAA7C,YACA/D,EAAAC,EAAAC,cAAA,SAAOK,UAAU,uEAAuE+B,KAAK,WAAWe,KAAK,WAAYS,GAAG,eAGpI9D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,IACfP,EAAAC,EAAAC,cAAA,SAAOI,QAAS,kBAAMR,EAAc,SAASS,UAAU,uEAAuE+B,KAAK,SAASL,MAAM,iBCCnJgC,EAvBK,CAChB,CAACH,GAAI,cAAeT,KAAM,QAASpB,MAAO,SAAWiC,OAAQ,QAC7D,CAACJ,GAAI,cAAeT,KAAM,MAAOpB,MAAO,UAAYiC,OAAQ,QAC5D,CAACJ,GAAI,cAAeT,KAAM,QAASpB,MAAO,SAAWiC,OAAQ,QAC7D,CAACJ,GAAI,cAAeT,KAAM,SAAUpB,MAAO,UAAYiC,OAAQ,QAC/D,CAACJ,GAAI,cAAeT,KAAM,YAAapB,MAAO,SAAWiC,OAAQ,QACjE,CAACJ,GAAI,cAAeT,KAAM,WAAYpB,MAAO,UAAYiC,OAAQ,QACjE,CAACJ,GAAI,cAAeT,KAAM,QAASpB,MAAO,SAAWiC,OAAQ,QAC7D,CAACJ,GAAI,cAAeT,KAAM,SAAUpB,MAAO,SAAWiC,OAAQ,QAC9D,CAACJ,GAAI,cAAeT,KAAM,YAAapB,MAAO,SAAWiC,OAAQ,QACjE,CAACJ,GAAI,cAAeT,KAAM,SAAUpB,MAAO,SAAWiC,OAAQ,QAC9D,CAACJ,GAAI,cAAeT,KAAM,WAAYpB,MAAO,UAAYiC,OAAQ,QACjE,CAACJ,GAAI,cAAeT,KAAM,MAAOpB,MAAO,UAAYiC,OAAQ,QAC5D,CAACJ,GAAI,cAAeT,KAAM,OAAQpB,MAAO,UAAYiC,OAAQ,QAC7D,CAACJ,GAAI,cAAeT,KAAM,WAAYpB,MAAO,SAAWiC,OAAQ,QAChE,CAACJ,GAAI,cAAeT,KAAM,SAAUpB,MAAO,SAAWiC,OAAQ,QAC9D,CAACJ,GAAI,cAAeT,KAAM,WAAYpB,MAAO,SAAWiC,OAAQ,QAChE,CAACJ,GAAI,cAAeT,KAAM,MAAOpB,MAAO,SAAWiC,OAAQ,QAC3D,CAACJ,GAAI,cAAeT,KAAM,OAAQpB,MAAO,QAAUiC,OAAQ,QAC3D,CAACJ,GAAI,cAAeT,KAAM,OAAQpB,MAAO,SAAWiC,OAAQ,QAC5D,CAACJ,GAAI,cAAeT,KAAM,YAAapB,MAAO,SAAWiC,OAAQ,SCP/DC,EAAM,IAAIC,IAASC,IAAI,CAC3BC,OAAQ,qCAGJC,EAAmB,CACvBC,UAAW,CACTC,OAAS,CACPxC,MAAO,GACPyC,QAAS,CACPC,QAAO,EACPC,WAAY,QAoGLP,cA7Fb,SAAAA,IAAc,IAAAjD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,IACZjD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,QAWFO,cAAgB,SAAC+C,GACfC,QAAQC,IAAIF,EAAEzC,OAAOH,OACnBb,EAAKoC,SAAS,CAACwB,MAAMH,EAAEzC,OAAOH,SAdpBb,EAiBdW,eAAiB,WAEfX,EAAKoC,SAAS,CAACyB,cAAc,IAC1B7D,EAAKO,MAAMqD,MAAME,SAAS,SAC7B9D,EAAKoC,SAAS,CAACE,SAAStC,EAAKO,MAAMqD,QACnCb,EAAIgB,OAAOC,UAAU,CAACtB,GAAIM,IAASiB,cAAeC,QAAS,qCACxDC,KAAK,SAAAC,GACJ,OAAOA,EAAaC,QAAQrE,EAAKO,MAAMqD,SAExCO,KAAK,SAAAG,GACJ,IAAIC,EAAWD,EAAQ,QAAY,GAApB,cACftE,EAAKoC,SAAS,CAACZ,UAAW+C,EAAUX,MAAO,GAAIC,cAAc,OAG/D7D,EAAKoC,SAAS,CAACwB,MAAM,kCA/BX5D,EAmCdY,iBAAmB,WACjBZ,EAAKoC,SAAS,CAACtB,cAAc,IAC7B0D,MAAM,sCACLL,KAAK,SAAAM,GAAK,OAAIzE,EAAKoC,SAAS,CAACwB,MAAOa,EAAMC,IAAM,OAAQ5D,cAAc,MACtE6D,MAAM,SAAAC,GAAG,OAAIlB,QAAQC,IAAIiB,MAvCd5E,EA0CdtB,cAAgB,SAACmG,GACF,WAAVA,EACD7E,EAAKoC,SAAS,CAACzD,YAAY,IACT,SAAVkG,GACR7E,EAAKoC,SAAS,CAACzD,YAAY,IAE7BqB,EAAKoC,SAAS,CAACyC,MAAOA,KA9CtB7E,EAAKO,MAAQ,CACXqD,MAAO,GACPtB,SAAU,yKACVd,UAAWqB,EACX/B,cAAc,EACd+C,cAAc,EACdgB,MAAO,SACPlG,YAAY,GATFqB,wEAmDL,IAAA8E,EAC2D3E,KAAKI,MAAhE5B,EADAmG,EACAnG,WAAW2D,EADXwC,EACWxC,SAASd,EADpBsD,EACoBtD,UAAUV,EAD9BgE,EAC8BhE,aAAc8C,EAD5CkB,EAC4ClB,MAAMiB,EADlDC,EACkDD,MACzD,OACEjG,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACfP,EAAAC,EAAAC,cAACiG,EAAAlG,EAAD,CAAWM,UAAU,YACb6F,OAAQ7B,IAEdvE,EAAAC,EAAAC,cAACmG,EAAD,CAAYtG,WAAYA,EAAYD,cAAeyB,KAAKzB,gBAC5C,SAAVmG,EACFjG,EAAAC,EAAAC,cAACoG,EAAA,SAAD,KACEtG,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAACuG,EAAD,CACAvE,aAAcA,EACdJ,cAAeP,KAAKO,cACpBE,iBAAkBT,KAAKS,iBACvBD,eAAgBR,KAAKQ,eACrBE,MAAO+C,IAENzD,KAAKI,MAAMsD,aACVjF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAGjBP,EAAAC,EAAAC,cAACwG,EAAD,CACAhD,SAAUA,EACVd,UAAWA,KAKD,WAAVqD,EACAjG,EAAAC,EAAAC,cAACyG,EAAD,CAAQ7G,cAAeyB,KAAKzB,gBAE5BE,EAAAC,EAAAC,cAAC0G,EAAD,CAAU9G,cAAeyB,KAAKzB,wBArFtB2C,aCjBEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOnH,EAAAC,EAAAC,cAACkH,EAAD,MAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlC,KAAK,SAAAmC,GACjCA,EAAaC","file":"static/js/main.05c61821.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.d668a020.png\";","import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if(isSignedIn){\r\n        return (\r\n        <nav style= {{display:'flex', justifyContent:'flex-end'}}>\r\n            <p onClick={() => onRouteChange('signin')} className='f4 link dim black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n        )   \r\n    } else {\r\n    return (\r\n        <nav style= {{display:'flex', justifyContent:'flex-end'}}>\r\n            <p onClick={() => onRouteChange('signin')} className='f4 link dim black underline pa3 pointer'>Sign In</p>\r\n            <p onClick={() => onRouteChange('register')} className='f4 link dim black underline pa3 pointer'>Register</p>\r\n            <p onClick={() => onRouteChange('home')} className='f4 link dim black underline pa3 pointer'>Login as Anonymous</p>\r\n        </nav>\r\n    )}\r\n}\r\nexport default Navigation;\r\n","import React from 'react'\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css';\r\nimport brain from './brain.png';\r\n\r\nconst Logo = () => {\r\n        return (\r\n            <div className='ma4 mt0'>\r\n                <Tilt className=\"Tilt br2 shadow-1\" options={{ max : 55 }} style={{ height: 200, width: 200 }} >\r\n                    <div className=\"Tilt-inner pa3\">Image Recognition App <img src={brain} alt='logo' style={{paddingTop:'5px'}} /></div>\r\n                </Tilt>\r\n            </div>\r\n        )\r\n    }\r\n    export default Logo;","import React, { Component } from 'react'\r\nimport './ImageLinkForm.css';\r\n\r\nclass ImageLinkForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inputValue: ''\r\n        }\r\n    }\r\n\r\n  render() {\r\n      const {onInputChange, onButtonSubmit, handleRandomLink, value, imageLoading} = this.props;\r\n    return (\r\n            <div>\r\n                <div className='center form pa4 shadow-5 ba b--black-05'>\r\n                <p className='w-90 tc center '>\r\n                {\"Input your url with image and the app will recognize what is on it.\\n If you don't have any image you can find some at\" }<a className='link dim gold bg-animate' href='https://unsplash.com' target='_blank' rel=\"noopener noreferrer\"> unsplash.com</a> or generate <a className='link dim gold bg-animate relative' onClick = {handleRandomLink} >random link.\r\n                { imageLoading === false? '' \r\n                :\r\n                    <div className=\"loaderSmall\"></div>\r\n                }</a>\r\n                </p>\r\n                <input className='f4 pa2 w-70 center' type='url' placeholder='https://' value={value} onChange={onInputChange}/>\r\n                <button className='w-30 grow f4 link ph3 pv2 dib white bg-blue relative'\r\n                onClick={onButtonSubmit}\r\n                >Detect\r\n                \r\n            </button>\r\n                </div>\r\n            </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n    <div>\r\n        {/* <div className='white f3'>\r\n            {'Your current rank is...'}\r\n        </div>\r\n        <div className='white f1'>\r\n            {'#5'}\r\n        </div> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageInfo.css';\r\n\r\nconst ImageInfo = ({imageInfo}) => {\r\n    if(imageInfo) {\r\n    return (\r\n        <div className='info'>\r\n            {imageInfo.map((detected,i) => { \r\n                const round = parseFloat(detected.value*100).toFixed(2);\r\n                return (\r\n                <p key={i} className='info-paragraph'><span className='detectedName'>{`${detected.name}`}</span><span className='detectedValue'>{` ${round}%`}</span></p>)})} \r\n        </div>\r\n    )\r\n    } else {\r\n    return (\r\n            <div></div>\r\n\r\n)\r\n}\r\n}\r\nexport default ImageInfo;","import React, { Component } from 'react'\r\nimport './ImageRecognition.css';\r\nimport ImageInfo from './ImageInfo/ImageInfo';\r\n\r\n\r\nclass ImageRecognition extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        };\r\n    }\r\n    handleImageLoaded = () => {\r\n        this.setState({loading: false});\r\n    }\r\n  render() {\r\n    const {imageUrl, imageInfo} = this.props;\r\n    return (\r\n        <div className='flex justify-center relative'>\r\n            <div className='imageContainer mt2'>\r\n            <img className={this.state.loading ? \"currentImage\" : \"currentImage visible\"} onLoad={this.handleImageLoaded} src={imageUrl} alt=''/>\r\n            {this.state.loading ? \r\n            <div className=\"loaderBig\">\r\n            </div> \r\n            : <ImageInfo imageInfo={imageInfo} />}\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default ImageRecognition;","import React from 'react'\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n    return (\r\n        <main className=\"pa4 b--black-20 br3 ba w-50-m shadow-5 mw6 center w-25-1\">\r\n            <form className=\"measure center\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\r\n                </div>\r\n                <div className=\" tc lh-copy mt3 pointer\">\r\n                    <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db\">Register</p>\r\n                </div>\r\n                <div className=\"tr\">\r\n                <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black grow pointer f6 dib bg-light-purple\" type=\"submit\" value=\"Anonymous login\" />\r\n                </div>\r\n            </form>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react'\r\n\r\nconst Register = ({onRouteChange}) => {\r\n    return (\r\n        <main className=\"pa4 b--black-20 br3 ba w-50-m shadow-5 mw6 center w-25-1\">\r\n            <form className=\"measure center\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\r\n                </div>\r\n            </form>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Register;","const defaultInfo = [\r\n    {id: \"ai_BlL0wSQh\", name: \"water\", value: 0.9962818, app_id: \"main\"},\r\n    {id: \"ai_7bRKqWjp\", name: \"sea\", value: 0.99576914, app_id: \"main\"},\r\n    {id: \"ai_xZgtf58b\", name: \"ocean\", value: 0.9903431, app_id: \"main\"},\r\n    {id: \"ai_VRmbGVWh\", name: \"travel\", value: 0.98410416, app_id: \"main\"},\r\n    {id: \"ai_786Zr311\", name: \"no person\", value: 0.9831534, app_id: \"main\"},\r\n    {id: \"ai_jWFxtpH1\", name: \"seashore\", value: 0.98313934, app_id: \"main\"},\r\n    {id: \"ai_J1hw9SFJ\", name: \"beach\", value: 0.9816502, app_id: \"main\"},\r\n    {id: \"ai_jlzP4C8j\", name: \"island\", value: 0.9743533, app_id: \"main\"},\r\n    {id: \"ai_MTvKbKJv\", name: \"landscape\", value: 0.9673852, app_id: \"main\"},\r\n    {id: \"ai_tBcWlsCp\", name: \"nature\", value: 0.9517455, app_id: \"main\"},\r\n    {id: \"ai_V0zg5ppH\", name: \"seascape\", value: 0.93681777, app_id: \"main\"},\r\n    {id: \"ai_lNsKfmXb\", name: \"sky\", value: 0.93339205, app_id: \"main\"},\r\n    {id: \"ai_PchWZPFC\", name: \"boat\", value: 0.90155095, app_id: \"main\"},\r\n    {id: \"ai_1W3Gfjzg\", name: \"vacation\", value: 0.8997644, app_id: \"main\"},\r\n    {id: \"ai_FsT0Zqdb\", name: \"summer\", value: 0.8986201, app_id: \"main\"},\r\n    {id: \"ai_Zmhsv0Ch\", name: \"outdoors\", value: 0.8936979, app_id: \"main\"},\r\n    {id: \"ai_0rLMqXwG\", name: \"bay\", value: 0.8908093, app_id: \"main\"},\r\n    {id: \"ai_DSCFH6f6\", name: \"sand\", value: 0.882473, app_id: \"main\"},\r\n    {id: \"ai_r8x1BJcR\", name: \"surf\", value: 0.8784616, app_id: \"main\"},\r\n    {id: \"ai_vCbqNgZn\", name: \"turquoise\", value: 0.8681201, app_id: \"main\"}\r\n    ];\r\n\r\nexport default defaultInfo;","import React, { Component, Fragment} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ImageRecognition from './components/ImageRecognition/ImageRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport defaultInfo from './components/ImageRecognition/ImageInfo/DefaultInfo';\n\nconst app = new Clarifai.App({\n  apiKey: '6c4b92d1050048a59e603aaac555b344'\n });\n\nconst particlesOptions = {\n  particles: {\n    number : {\n      value: 60,\n      density: {\n        enable:true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: 'https://images.unsplash.com/photo-1540206458-a985485e4a8e?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=e2e651dc8e83c46450aaf39a4dd59066&auto=format&fit=crop&w=2090&q=80',\n      imageInfo: defaultInfo,\n      imageLoading: false,\n      dataFetching: false,\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n  onInputChange = (e) => {\n    console.log(e.target.value);\n      this.setState({input:e.target.value})\n  }\n\n  onButtonSubmit = () => {\n\n    this.setState({dataFetching: true});\n    if(this.state.input.includes('http')){\n    this.setState({imageUrl:this.state.input});\n    app.models.initModel({id: Clarifai.GENERAL_MODEL, version: \"aa7f35c01e0642fda5cf400f543e7c40\"})\n      .then(generalModel => {\n        return generalModel.predict(this.state.input);\n      })\n      .then(response => {\n        var concepts = response['outputs'][0]['data']['concepts'];\n        this.setState({imageInfo: concepts, input: '', dataFetching: false})\n      })\n    } else {\n      this.setState({input:'Wprowadź poprawny adres'});\n    }\n  }\n\n  handleRandomLink = () => {\n    this.setState({imageLoading: true});\n    fetch('https://source.unsplash.com/random')\n    .then(image => this.setState({input: image.url + '.jpg', imageLoading: false}))\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if(route === 'signin'){\n      this.setState({isSignedIn: false})\n    }else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n  \n  render() {\n    const {isSignedIn,imageUrl,imageInfo,imageLoading, input,route} = this.state;\n    return (\n      <div className=\"App\">\n      <Particles className='particles'\n              params={particlesOptions}\n            />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'?\n        <Fragment>\n          <Logo />\n          <Rank />\n          <ImageLinkForm \n          imageLoading={imageLoading}\n          onInputChange={this.onInputChange}\n          handleRandomLink={this.handleRandomLink} \n          onButtonSubmit={this.onButtonSubmit} \n          value={input}\n          />\n          {this.state.dataFetching?\n            <div className=\"loaderBig\">\n            </div> \n            :\n          <ImageRecognition \n          imageUrl={imageUrl} \n          imageInfo={imageInfo} />\n          }\n        </Fragment>\n        :\n        (\n          route === 'signin' ?\n          <SignIn onRouteChange={this.onRouteChange} />\n          :\n          <Register onRouteChange={this.onRouteChange} />\n        )\n        \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}